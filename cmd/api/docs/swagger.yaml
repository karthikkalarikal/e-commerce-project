definitions:
  domain.Category:
    properties:
      category_name:
        type: string
      id:
        type: integer
    type: object
  models.Address:
    properties:
      city:
        type: string
      house_name:
        type: string
      name:
        type: string
      pin:
        type: string
      selection:
        type: boolean
      state:
        type: string
      street:
        type: string
    required:
    - city
    - house_name
    - name
    - pin
    - state
    - street
    type: object
  models.CartItems:
    properties:
      amount:
        type: string
      cart_id:
        type: integer
      product_id:
        type: integer
      quantity:
        type: string
    type: object
  models.Category:
    properties:
      category_name:
        type: string
    type: object
  models.ChangePassword:
    properties:
      newpassword:
        type: string
      oldpassword:
        type: string
      password_id:
        type: integer
    type: object
  models.CouponInput:
    properties:
      coupon:
        type: string
      discount_percentage:
        type: integer
      minimum_price:
        type: number
      validity:
        type: boolean
    type: object
  models.OTPData:
    properties:
      phone:
        type: string
    required:
    - phone
    type: object
  models.Product:
    properties:
      category_id:
        type: integer
      colour:
        type: string
      price:
        type: string
      product_image:
        items:
          type: integer
        type: array
      product_name:
        type: string
      stock:
        type: string
    type: object
  models.UserDetails:
    properties:
      confirmpassword:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
    type: object
  models.UserDetailsResponse:
    properties:
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      user_id:
        type: integer
    type: object
  models.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.UserSignInResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        default: false
        type: boolean
      user_id:
        type: integer
    type: object
  models.VerifyData:
    properties:
      code:
        type: string
      phone:
        type: string
    required:
    - code
    - phone
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
info:
  contact:
    name: API Support
  description: TechDeck is an E-commerce platform to purchase and sell Electronic
    itmes
  title: Go + Gin E-Commerce API
  version: 1.0.0
paths:
  /admin/coupon/addcoupon:
    post:
      consumes:
      - application/json
      description: Add Coupon
      parameters:
      - description: coupon details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.CouponInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: fail
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Add Coupon
      tags:
      - Coupon Mangement
  /admin/coupon/expire:
    patch:
      description: Expire Coupons by Admin
      parameters:
      - description: coupon
        in: query
        name: coupon
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: fail
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Expire Coupons
      tags:
      - Coupon Mangement
  /admin/coupon/view:
    get:
      description: View Coupons by Admin
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: fail
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: View Coupons
      tags:
      - Coupon Mangement
  /admin/dashboard/salesbydate:
    get:
      description: sales by date
      parameters:
      - description: year YYYY
        in: query
        name: year
        type: integer
      - description: month MM
        in: query
        name: month
        type: integer
      - description: day DD
        in: query
        name: day
        type: integer
      - description: pdf/excel
        in: query
        name: download
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'array of order details '
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: sales by date
      tags:
      - Admin Dashboard
  /admin/dashboard/totalsales:
    get:
      description: Total Sales
      produces:
      - application/json
      responses:
        "200":
          description: 'array of sales  '
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Total Sales User
      tags:
      - Admin Dashboard
  /admin/product/addcategory:
    post:
      consumes:
      - application/json
      description: Add category by admin
      parameters:
      - description: Category object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "200":
          description: Added Category details
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Add category
      tags:
      - Product Management
  /admin/product/addproduct:
    post:
      consumes:
      - application/json
      description: Add product by admin
      parameters:
      - description: Product object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: Added product details
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Add product
      tags:
      - Product Management
  /admin/product/deletecategory/{category_id}:
    delete:
      consumes:
      - application/json
      description: delete Category by id
      parameters:
      - description: category_id
        in: query
        name: category_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'delete Category  '
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
      security:
      - BearerTokenAuth: []
      summary: delete category
      tags:
      - Product Management
  /admin/product/deleteproduct/{product_id}:
    delete:
      consumes:
      - application/json
      description: Delete product by id
      parameters:
      - description: product id
        in: query
        name: product_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Array of deleted product details '
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete product
      tags:
      - Product Management
  /admin/product/editproduct/{product_id}:
    put:
      consumes:
      - application/json
      description: Edit product by admin
      parameters:
      - description: product_id
        in: query
        name: product_id
        required: true
        type: integer
      - description: Product object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: Edit product details
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
      security:
      - BearerTokenAuth: []
      summary: Edit product
      tags:
      - Product Management
  /admin/product/updatecategory:
    post:
      consumes:
      - application/json
      description: Category by id
      parameters:
      - description: category_id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Update Category  '
          schema:
            items:
              $ref: '#/definitions/domain.Category'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/domain.Category'
            type: array
      security:
      - BearerTokenAuth: []
      summary: update category
      tags:
      - Product Management
  /admin/users/block/{user_id}:
    patch:
      description: Block/Unblock on prompt
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: The user details
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Block/Unblock User
      tags:
      - User Management
  /admin/users/deleteuser/{user_id}:
    delete:
      consumes:
      - application/json
      description: Delete user by id
      parameters:
      - description: user id
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Array of user details '
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete User
      tags:
      - User Management
  /admin/users/searchuser:
    get:
      consumes:
      - application/json
      description: Search for users based on various criteria with pagination.
      parameters:
      - description: Name to search for
        in: query
        name: name
        type: string
      - description: Email address to search for
        in: query
        name: email
        type: string
      - description: ID to search for
        in: query
        name: id
        type: integer
      - description: Page number (default 1)
        in: query
        name: page
        type: integer
      - description: Result per page (default 1)
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Array of user details '
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
        "500":
          description: Error in server
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
      security:
      - BearerTokenAuth: []
      summary: Search user by various criteria
      tags:
      - User Management
  /admin/users/userlist:
    get:
      description: Retrive and display user list according to instructions
      parameters:
      - description: Page number (default 1)
        in: query
        name: page
        type: integer
      - description: Results per page (default 5)
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Array of user details '
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
      security:
      - BearerTokenAuth: []
      summary: List the users you could specify page and no of users in one page
      tags:
      - User Management
  /users/carts/addtocart:
    post:
      consumes:
      - application/json
      description: Add product to the cart using product id
      parameters:
      - description: cart_id only this cart_id is needed
        in: query
        name: cart_id
        type: integer
      - description: user_id
        in: query
        name: user_id
        required: true
        type: integer
      - description: Cart details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.CartItems'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: fail
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Add to Cart
      tags:
      - Cart Mangement
  /users/carts/delete:
    delete:
      description: delet a product from cart
      parameters:
      - description: cart items id
        in: query
        name: cart_items_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: deleted cart items
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
      security:
      - BearerTokenAuth: []
      summary: delete products from cart
      tags:
      - Cart Mangement
  /users/carts/listcarts:
    get:
      description: Get All The Carts User Has
      parameters:
      - description: user id
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Array of product details '
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
      security:
      - BearerTokenAuth: []
      summary: Carts By User Id
      tags:
      - Cart Mangement
  /users/carts/quantity:
    patch:
      description: Change the quantity of the cart items
      parameters:
      - description: cart items id
        in: query
        name: cart_items
        required: true
        type: integer
      - description: quantity
        in: query
        name: quantity
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Array of product details '
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
      security:
      - BearerTokenAuth: []
      summary: Update the quantity of cart
      tags:
      - Cart Mangement
  /users/carts/viewcart:
    get:
      description: Retrive and display product list in cart
      parameters:
      - description: user id
        in: query
        name: user_id
        required: true
        type: integer
      - description: cart_id
        in: query
        name: cart_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Array of product details '
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
      security:
      - BearerTokenAuth: []
      summary: List the products in cart
      tags:
      - Cart Mangement
  /users/login:
    post:
      consumes:
      - application/json
      description: Sign in a user and return user details and a token
      parameters:
      - description: User login details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: User details and role
          schema:
            $ref: '#/definitions/models.UserSignInResponse'
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/models.UserSignInResponse'
            type: array
      summary: UserSignIN
      tags:
      - User Auth
  /users/order/add:
    post:
      consumes:
      - application/json
      description: Add cart to the order using user id and cart id
      parameters:
      - description: cart id
        in: query
        name: cart_id
        required: true
        type: integer
      - description: user_id
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: fail
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Add To Order
      tags:
      - Order Management
  /users/order/cancel:
    delete:
      description: Cancel Order By Order Id
      parameters:
      - description: order_id
        in: query
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: fail
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Cancel Order
      tags:
      - Order Management
  /users/order/payment:
    post:
      consumes:
      - application/json
      description: pay for razor pay
      parameters:
      - description: user id
        in: query
        name: user_id
        required: true
        type: integer
      - description: order_id
        in: query
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'invoice with details of order and user '
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Make Payment
      tags:
      - Order Management
  /users/order/print:
    get:
      description: Print invoice by order Id
      parameters:
      - description: order_id
        in: query
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: fail
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Print Invoice
      tags:
      - Order Management
  /users/order/redeem:
    patch:
      description: Redeem Coupons by User
      parameters:
      - description: coupon
        in: query
        name: coupon
        required: true
        type: string
      - description: order_id
        in: query
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: fail
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Redeem Coupons
      tags:
      - Order Management
  /users/order/verifypayment:
    post:
      description: verify payment
      parameters:
      - description: payment id
        in: query
        name: payment_id
        required: true
        type: string
      - description: order_id
        in: query
        name: order_id
        required: true
        type: string
      - description: razor_id
        in: query
        name: razor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'invoice with details of order and user '
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: verify payment
      tags:
      - Order Management
  /users/order/view:
    get:
      consumes:
      - application/json
      description: Add cart to the order using user id and cart id
      parameters:
      - description: order_id
        in: query
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: fail
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Add To Order
      tags:
      - Order Management
  /users/otplogin:
    post:
      consumes:
      - application/json
      description: verify Phone number using OTP
      parameters:
      - description: Phone number
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.OTPData'
      produces:
      - application/json
      responses:
        "200":
          description: phone number
          schema:
            items:
              $ref: '#/definitions/models.UserSignInResponse'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/models.UserSignInResponse'
            type: array
      summary: SendOTP
      tags:
      - User Auth
  /users/signup:
    post:
      consumes:
      - application/json
      description: Retrive UserDetails stored in DB and a auth token with success
        message
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserDetails'
      produces:
      - application/json
      responses:
        "201":
          description: User details and token
          schema:
            items:
              $ref: '#/definitions/models.UserDetails'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/models.UserSignInResponse'
            type: array
      summary: UserSignUP
      tags:
      - User Auth
  /users/user/address:
    post:
      consumes:
      - application/json
      description: Enter and save userAdress along with userId
      parameters:
      - description: User Id
        in: query
        name: user_id
        required: true
        type: integer
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Address'
      produces:
      - application/json
      responses:
        "201":
          description: User details and token
          schema:
            items:
              $ref: '#/definitions/models.UserDetails'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/models.UserSignInResponse'
            type: array
      security:
      - BearerTokenAuth: []
      summary: Address
      tags:
      - Address Management
  /users/user/addresses:
    get:
      description: get Address by user id
      produces:
      - application/json
      responses:
        "201":
          description: changed addres
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: ViewAddress
      tags:
      - User Profile
  /users/user/changepassword:
    post:
      consumes:
      - application/json
      description: Change the users password
      parameters:
      - description: User Id
        in: query
        name: user_id
        required: true
        type: integer
      - description: User Password
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/models.ChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
      security:
      - BearerTokenAuth: []
      summary: ChangePassword
      tags:
      - User Profile
  /users/user/edit:
    put:
      consumes:
      - application/json
      description: Edit User Details and store in db
      parameters:
      - description: User Id
        in: query
        name: user_id
        required: true
        type: integer
      - description: User details
        in: body
        name: user
        schema:
          $ref: '#/definitions/models.UserDetailsResponse'
      produces:
      - application/json
      responses:
        "201":
          description: User details
          schema:
            items:
              $ref: '#/definitions/models.UserDetails'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/models.UserSignInResponse'
            type: array
      security:
      - BearerTokenAuth: []
      summary: EditUserDetails
      tags:
      - User Profile
  /users/user/select:
    patch:
      description: Address selected for cash on delivery
      parameters:
      - description: Address Id
        in: query
        name: address_id
        required: true
        type: integer
      - description: 'selection '
        in: query
        name: selection
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "201":
          description: changed addres
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: SelectAddress
      tags:
      - Address Management
  /users/user/viewdetails:
    get:
      description: UserDetails
      parameters:
      - description: User Id
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: changed addres
          schema:
            $ref: '#/definitions/models.UserDetails'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/models.UserSignInResponse'
      security:
      - BearerTokenAuth: []
      summary: ViewUser
      tags:
      - User Profile
  /users/verifyotp:
    post:
      consumes:
      - application/json
      description: verify Phone number using OTP
      parameters:
      - description: Phone number and code
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.VerifyData'
      produces:
      - application/json
      responses:
        "200":
          description: phone number
          schema:
            items:
              $ref: '#/definitions/models.UserSignInResponse'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/models.UserSignInResponse'
            type: array
      summary: VerifyOTP
      tags:
      - User Auth
  /users/viewbycategories:
    get:
      description: Retrive and display product list according to instructions
      parameters:
      - description: Page number (default 1)
        in: query
        name: page
        type: integer
      - description: Results per page (default 5)
        in: query
        name: per_page
        type: integer
      - description: the id
        in: query
        name: category_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Array of product details '
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
      summary: List the products sort by category
      tags:
      - General
  /users/viewproducts:
    get:
      description: Retrive and display product list according to instructions
      parameters:
      - description: Page number (default 1)
        in: query
        name: page
        type: integer
      - description: Results per page (default 5)
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Array of product details '
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
      summary: List the products you could specify page and no of products in one
        page
      tags:
      - General
  /users/wallet/view:
    get:
      description: Get Wallet By User Id
      parameters:
      - description: user_id
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: fail
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Wallet of User
      tags:
      - Wallet Management
securityDefinitions:
  BearerTokenAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
