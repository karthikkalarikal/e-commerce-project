definitions:
  domain.Category:
    properties:
      category_name:
        type: string
      id:
        type: integer
    type: object
  domain.Product:
    properties:
      category_id:
        type: integer
      colour:
        type: string
      id:
        type: integer
      price:
        type: string
      product_image:
        items:
          type: integer
        type: array
      product_name:
        type: string
      stock:
        type: string
    type: object
  domain.Users:
    properties:
      blocked:
        type: boolean
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
      phone:
        type: string
      role:
        type: boolean
    type: object
  handler.userBlock:
    properties:
      blocked:
        type: boolean
      id:
        type: integer
    type: object
  models.OTPData:
    properties:
      phone:
        type: string
    required:
    - phone
    type: object
  models.Product:
    properties:
      category_id:
        type: integer
      colour:
        type: string
      id:
        type: integer
      price:
        type: string
      product_image:
        items:
          type: integer
        type: array
      product_name:
        type: string
      stock:
        type: string
    type: object
  models.UserDetails:
    properties:
      confirmpassword:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        default: false
        type: boolean
    type: object
  models.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.UserSignInResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        default: false
        type: boolean
      user_id:
        type: integer
    type: object
  models.VerifyData:
    properties:
      code:
        type: string
      phone:
        type: string
    required:
    - code
    - phone
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
info:
  contact: {}
paths:
  /admin/product/addcategory:
    post:
      consumes:
      - application/json
      description: Add category by admin
      parameters:
      - description: Category object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/domain.Category'
      produces:
      - application/json
      responses:
        "200":
          description: Added Category details
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
      security:
      - BearerTokenAuth: []
      summary: Add category
      tags:
      - Product Management
  /admin/product/addproduct:
    post:
      consumes:
      - application/json
      description: Add product by admin
      parameters:
      - description: Product object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/domain.Product'
      produces:
      - application/json
      responses:
        "200":
          description: Added product details
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
      security:
      - BearerTokenAuth: []
      summary: Add product
      tags:
      - Product Management
  /admin/product/deleteproduct:
    post:
      consumes:
      - application/json
      description: Delete product by id
      parameters:
      - description: product id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Array of deleted product details '
          schema:
            items:
              $ref: '#/definitions/domain.Product'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/domain.Product'
            type: array
      security:
      - BearerTokenAuth: []
      summary: Delete product
      tags:
      - Product Management
  /admin/product/editproduct:
    post:
      consumes:
      - application/json
      description: Edit product by admin
      parameters:
      - description: Product object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/domain.Product'
      produces:
      - application/json
      responses:
        "200":
          description: Edit product details
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
      security:
      - BearerTokenAuth: []
      summary: Edit product
      tags:
      - Product Management
  /admin/product/updatecategory:
    patch:
      consumes:
      - application/json
      description: delete Category by id
      parameters:
      - description: category_id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'delete Category  '
          schema:
            items:
              $ref: '#/definitions/domain.Category'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/domain.Category'
            type: array
      security:
      - BearerTokenAuth: []
      summary: delete category
      tags:
      - Product Management
  /admin/users/block:
    post:
      consumes:
      - application/json
      description: Edit block collumn of user
      parameters:
      - description: blocked user id
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.userBlock'
      produces:
      - application/json
      responses:
        "200":
          description: 'Array of user details '
          schema:
            items:
              $ref: '#/definitions/domain.Users'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/domain.Users'
            type: array
      security:
      - BearerTokenAuth: []
      summary: Block/Unblock-User
      tags:
      - User Management
  /admin/users/deleteuser:
    post:
      consumes:
      - application/json
      description: Delete user by id
      parameters:
      - description: User's id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Array of user details '
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
      security:
      - BearerTokenAuth: []
      summary: Delete user
      tags:
      - User Management
  /admin/users/searchbyemail:
    post:
      consumes:
      - application/json
      description: find user by email
      parameters:
      - description: User's email address
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'Array of user details '
          schema:
            items:
              $ref: '#/definitions/domain.Users'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/domain.Users'
            type: array
      security:
      - BearerTokenAuth: []
      summary: Search user by email
      tags:
      - User Management
  /admin/users/userlist:
    post:
      consumes:
      - application/json
      description: Retrive and display user list
      produces:
      - application/json
      responses:
        "200":
          description: 'Array of user details '
          schema:
            items:
              $ref: '#/definitions/models.UserDetails'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/models.UserDetails'
            type: array
      security:
      - BearerTokenAuth: []
      summary: ListProducts
      tags:
      - User Management
  /cart/addtocart/{id}:
    put:
      consumes:
      - application/json
      description: Add product to the cart using product id
      parameters:
      - description: product-id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Add to Cart
      tags:
      - User Cart
  /user/otplogin:
    post:
      consumes:
      - application/json
      description: verify Phone number using OTP
      parameters:
      - description: Phone number
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.OTPData'
      produces:
      - application/json
      responses:
        "200":
          description: phone number
          schema:
            items:
              $ref: '#/definitions/models.UserSignInResponse'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/models.UserSignInResponse'
            type: array
      summary: SendOTP
      tags:
      - User Auth
  /user/signin:
    post:
      consumes:
      - application/json
      description: Sign in a user and return user details and a token
      parameters:
      - description: User login details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: User details and role
          schema:
            $ref: '#/definitions/models.UserSignInResponse'
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/models.UserSignInResponse'
            type: array
      summary: UserSignIN
      tags:
      - User Auth
  /user/verifyotp:
    post:
      consumes:
      - application/json
      description: verify Phone number using OTP
      parameters:
      - description: Phone number and code
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.VerifyData'
      produces:
      - application/json
      responses:
        "200":
          description: phone number
          schema:
            items:
              $ref: '#/definitions/models.UserSignInResponse'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/models.UserSignInResponse'
            type: array
      summary: VerifyOTP
      tags:
      - User Auth
  /users/signup:
    get:
      consumes:
      - application/json
      description: Retrive UserDetails stored in DB and a auth token with success
        message
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserDetails'
      produces:
      - application/json
      responses:
        "200":
          description: User details and token
          schema:
            items:
              $ref: '#/definitions/models.UserDetails'
            type: array
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/models.UserSignInResponse'
            type: array
      summary: UserSignUP
      tags:
      - User Auth
  /users/viewproducts:
    get:
      consumes:
      - application/json
      description: view products by a user
      produces:
      - application/json
      responses:
        "200":
          description: List of products
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad request
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      summary: ViewProducts
swagger: "2.0"
